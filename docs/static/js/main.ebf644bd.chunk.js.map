{"version":3,"sources":["components/useReducer/todoReducer.js","components/useReducer/TodoAction.js","components/useReducer/TodoList.js","components/useReducer/TodoForm.js","components/useReducer/TodoApp.js","Hooks/useForm.js","index.js"],"names":["todoReducer","state","action","type","paylot","filter","todo","id","payload","map","done","TodoAction","value","trim","length","Math","random","desc","TodoList","todos","dispatch","className","i","onClick","TodoForm","description","handleInputChange","reset","name","placeholder","onChange","e","preventDefault","init","JSON","parse","localStorage","getItem","TodoApp","useReducer","initialState","useState","setValue","target","useForm","useEffect","setItem","stringify","ReactDOM","render","document","getElementById"],"mappings":"4MAEaA,EAAc,WAA6B,IAA1BC,EAAyB,uDAAjB,GAAKC,EAAY,uCAGlD,OAAUA,EAAOC,MACb,IAAK,MACD,MAAM,GAAN,mBAAWF,GAAX,CAAkBC,EAAOE,SAE7B,IAAK,SACD,OAAOH,EAAMI,QAAU,SAAAC,GAAI,OAAIA,EAAKC,KAAOL,EAAOM,WAEtD,IAAK,SACD,OAAOP,EAAMQ,KAAK,SAAAH,GAAI,OAClBA,EAAKC,KAAOL,EAAOM,QAApB,YAAC,eAAmCF,GAApC,IAAyCI,MAAOJ,EAAKI,OAASJ,KAGrE,QACI,OAAOL,I,OChBPU,EAAa,SAACT,GAAuB,IAAhBU,EAAe,uDAAP,GAElC,OAAQV,GACJ,IAAK,MACD,OAAQU,EAAMC,OAAOC,OAAQ,GAC7B,CACIX,KAAM,MACNC,OAAQ,CACJG,GAAkB,IAAdQ,KAAKC,SACTC,KAAML,EACNF,MAAM,IAIlB,IAAK,SACD,MAAO,CACHP,KAAM,SACNK,QAASI,GAGjB,IAAK,SACD,MAAO,CACHT,KAAM,SACNK,QAASI,K,OCtBhBM,EAAW,SAAC,GAA2B,IAAxBC,EAAuB,EAAvBA,MAAQC,EAAe,EAAfA,SAChC,OACI,oBAAIC,UAAU,aAAd,SAEOF,EAAMV,KAAK,WAAgBa,GAAO,IAArBf,EAAoB,EAApBA,GAAGU,EAAiB,EAAjBA,KAAKP,EAAY,EAAZA,KAClB,OAAO,mCACP,qBAEEa,QAAW,kBAAKH,EAAYT,EAAW,SAASJ,KAChDc,UAAS,oDAAgDX,GAAM,YAHjE,oBAKUY,EAAE,EALZ,SAKoBL,EAEd,wBAEII,UAAU,8BACVE,QAAU,kBAAMH,EAAYT,EAAW,SAASJ,KAHpD,oCACoBA,MAPlBA,WCPbiB,EAAW,SAAC,GAAuD,IAAtDC,EAAqD,EAArDA,YAAaC,EAAwC,EAAxCA,kBAAmBC,EAAqB,EAArBA,MAAOP,EAAc,EAAdA,SAC7D,OACI,gCACQ,uBACA,iDAEA,uBAAMC,UAAU,aAAhB,UACI,uBACIlB,KAAK,OACLyB,KAAK,cACLP,UAAU,eACVQ,YAAY,6DACZjB,MAAQa,EACRK,SAAaJ,IAIjB,wBACAvB,KAAK,SACLkB,UAAU,kBACVE,QAAW,SAAAQ,GACPA,EAAEC,iBACFZ,EAAYT,EAAW,MAAMc,IAC7BE,KANJ,8BCZdM,G,MAAO,WACT,OAAOC,KAAKC,MAAMC,aAAaC,QAAQ,WAAa,KAG3CC,EAAU,WAEnB,MAA4BC,qBAAWvC,EAAY,GAAGiC,GAAtD,mBAAQd,EAAR,KAAeC,EAAf,KAEA,ECdmB,WAAwB,IAAvBoB,EAAsB,uDAAP,GAEnC,EAA0BC,mBAASD,GAAnC,mBAAO5B,EAAP,KAAc8B,EAAd,KAgBA,MAAO,CAAC9B,EARkB,SAAC,GAAY,IAAX+B,EAAU,EAAVA,OAExBD,EAAS,2BACF9B,GADC,kBAEH+B,EAAOf,KAAOe,EAAO/B,UAVhB,WAEV8B,EAASF,KDQyCI,CAAQ,CAC1DnB,YAAa,KADjB,mBAAUA,EAAV,KAAUA,YAAeC,EAAzB,KAA4CC,EAA5C,KASA,OALAkB,qBAAU,WACNT,aAAaU,QAAQ,QAASZ,KAAKa,UAAU5B,MAC9C,CAACA,IAIA,gCACI,+CACA,sDAA4BA,EAAML,UAGlC,cAAC,EAAD,CACAW,YAAeA,EACfC,kBAAqBA,EACrBC,MAASA,EACTP,SAAYA,IAGZ,uBAEA,cAAC,EAAD,CACAD,MAASA,EACTC,SAAYA,Q,MEzBxB4B,IAASC,OACP,mCACE,cAAC,EAAD,MAEFC,SAASC,eAAe,W","file":"static/js/main.ebf644bd.chunk.js","sourcesContent":["\r\n\r\nexport const todoReducer = (  state = [],  action ) => {\r\n\r\n    \r\n     switch (  action.type  ) {\r\n         case \"add\":\r\n             return [...state, action.paylot];\r\n             \r\n         case \"delete\":\r\n             return state.filter(   todo => todo.id !== action.payload   )\r\n        \r\n         case \"toggle\":\r\n             return state.map( todo => \r\n                (todo.id === action.payload )?  {...todo,done: !todo.done}  : todo\r\n             )\r\n            \r\n         default:\r\n             return state;\r\n             \r\n\r\n         }\r\n        \r\n        \r\n    \r\n}\r\n","\r\n\r\nexport const TodoAction = (action,value = \"\") => {\r\n\r\n        switch (action) {\r\n            case \"add\":\r\n                return (value.trim().length >2) &&\r\n                {\r\n                    type: \"add\",\r\n                    paylot: {\r\n                        id: Math.random()*10000,\r\n                        desc: value,\r\n                        done: false\r\n                    }\r\n                }\r\n\r\n            case \"delete\":\r\n                return {\r\n                    type: \"delete\",\r\n                    payload: value\r\n                }\r\n\r\n            case \"toggle\":\r\n                return {\r\n                    type: \"toggle\",\r\n                    payload: value\r\n                }\r\n\r\n            default:\r\n                break;\r\n        }\r\n    }\r\n\r\n","import React from 'react'\r\nimport { TodoAction } from './TodoAction'\r\n\r\nexport const TodoList = ({  todos , dispatch }) => {\r\n    return (\r\n        <ul className=\"list-group\">\r\n        {\r\n               todos.map( ({id,desc,done},i) => {\r\n                  return <>\r\n                  <li \r\n                    key={ id } \r\n                    onClick={  ()=> dispatch(   TodoAction(\"toggle\",id))  }     \r\n                    className={`list-group-item list-group-item-info Todo ${ done&&'complete'}` }\r\n                  >  \r\n                        {`${i+1}.`} { desc }    \r\n\r\n                        <button     \r\n                            key={ `button ${id}`  }    \r\n                            className=\"btn btn-danger boton-borrar\"     \r\n                            onClick={ () => dispatch(   TodoAction(\"delete\",id))  }\r\n                        >   \r\n                                Borrar  \r\n                        </button>\r\n\r\n                  </li>\r\n                  </>\r\n               })\r\n        }\r\n        </ul>\r\n    )\r\n}\r\n","import React from 'react'\r\nimport { TodoAction } from './TodoAction';\r\n\r\nexport const TodoForm = ({description, handleInputChange, reset, dispatch}) => {\r\n    return (\r\n        <div>\r\n                <hr />\r\n                <h4> Agregar tarea </h4>\r\n\r\n                <form className=\"form-label\">\r\n                    <input\r\n                        type=\"text\"\r\n                        name=\"description\"\r\n                        className=\"form-control\"\r\n                        placeholder=\"Por ejemplo: Aprender algo, cocinar, realizar un mandado..\"\r\n                        value={ description }\r\n                        onChange={   handleInputChange  }\r\n\r\n                    ></input>\r\n\r\n                    <button  \r\n                    type=\"submit\"\r\n                    className=\"btn btn-success\"\r\n                    onClick={  e => {\r\n                        e.preventDefault();\r\n                        dispatch(   TodoAction(\"add\",description));\r\n                        reset();\r\n                    }}\r\n                    > Agregar </button>\r\n\r\n                </form>\r\n        </div>\r\n    )\r\n}\r\n","import React, { useEffect, useReducer } from 'react'\r\nimport { todoReducer } from './todoReducer'\r\nimport { useForm } from '../../Hooks/useForm'\r\nimport { TodoList } from './TodoList';\r\nimport { TodoForm } from './TodoForm';\r\n\r\nimport \"./TodoApp.css\";\r\n\r\nconst init = () => {\r\n    return JSON.parse(localStorage.getItem(\"todos\")) || [];\r\n}\r\n\r\nexport const TodoApp = () => {\r\n\r\n    const [ todos, dispatch ] = useReducer(todoReducer,[],init);\r\n\r\n    const [  {description} , handleInputChange, reset ] = useForm({\r\n        description: \"\"\r\n    });\r\n    \r\n    useEffect(() => {\r\n        localStorage.setItem(\"todos\", JSON.stringify(todos))\r\n    }, [todos])\r\n\r\n\r\n    return (\r\n        <div>\r\n            <h1>App de tareas</h1>\r\n            <h2>Cantidad de tareas: {   todos.length    }</h2>\r\n            \r\n\r\n            <TodoForm   \r\n            description = {description} \r\n            handleInputChange = {handleInputChange} \r\n            reset = {reset}\r\n            dispatch = {dispatch}\r\n            />\r\n\r\n            <hr />\r\n\r\n            <TodoList   \r\n            todos = {todos} \r\n            dispatch = {dispatch}\r\n            />\r\n\r\n\r\n        </div>\r\n    )\r\n}\r\n","import {useState} from 'react'\r\n\r\nexport const useForm = (initialState = {}) => {\r\n\r\n    const [value, setValue] = useState(initialState);\r\n\r\n    const reset = () => {\r\n\r\n        setValue(initialState)\r\n\r\n    }\r\n\r\n    const handleInputChange = ({target})=>{\r\n        // console.log(target.name,target.value)\r\n        setValue({\r\n            ...value,\r\n            [target.name]: target.value,\r\n        });\r\n    }\r\n\r\n    return [value,handleInputChange,reset];\r\n}\r\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import { Padre } from './components/tarea-memo/Padre';\n// import { IntroReducer } from './components/useReducer/IntroReducer';\nimport { TodoApp } from './components/useReducer/TodoApp';\n// import { FormWithCustomHook } from './components/useEffect/FormWithCustomHook';\n// import { SimpleForm } from './components/useEffect/SimpleForm';\n// import { UseMultipleState } from './components/useExamples/UseMultipleState';\n// import { ExampleRef } from './components/useRef/ExampleRef';\n// import { CounterWithCustomHooks } from './components/useState/CounterWithCustomHooks';\n// import { useFetch } from './Hooks/useFetch';\n// import { HooksApp } from './HooksApp';\n\nimport './index.css';\n\n\n\nReactDOM.render(\n  <>\n    <TodoApp />\n  </>,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}